const express = require("express");
const cors = require("cors");
const bodyParser = require("body-parser");

const app = express();
app.use(cors());
app.use(bodyParser.json());

// ---------------- PRODUCTS ----------------
let products = [
  { id: 1, name: "T-shirt", price: 20 },
  { id: 2, name: "Jeans", price: 40 },
  { id: 3, name: "Sneakers", price: 60 },
  { id: 4, name: "Checked Shirt", price: 90 },
];

let cart = [];
let orders = [];

// Get all products
app.get("/api/products", (req, res) => {
  res.json(products);
});

// Add to cart
app.post("/api/cart/add", (req, res) => {
  const { id } = req.body;
  const product = products.find((p) => p.id === id);
  if (!product) return res.status(404).json({ error: "Product not found" });

  const exist = cart.find((item) => item.id === id);
  if (exist) {
    exist.qty += 1;
  } else {
    cart.push({ ...product, qty: 1 });
  }

  res.json({ message: "Item added to cart", cart });
});

// Update quantity
app.post("/api/cart/update", (req, res) => {
  const { id, qty } = req.body;
  cart = cart.map((item) =>
    item.id === id ? { ...item, qty: parseInt(qty) } : item
  );
  res.json({ message: "Cart updated", cart });
});

// Remove from cart
app.post("/api/cart/remove", (req, res) => {
  const { id } = req.body;
  cart = cart.filter((item) => item.id !== id);
  res.json({ message: "Item removed", cart });
});

// Checkout
app.post("/api/cart/checkout", (req, res) => {
  if (cart.length === 0)
    return res.status(400).json({ error: "Cart is empty" });

  const orderId = Date.now();
  const total = cart.reduce((sum, item) => sum + item.price * item.qty, 0);
  const newOrder = { id: orderId, items: cart, total, status: "Paid" };

  orders.push(newOrder);
  cart = [];

  res.json({ message: "Checkout complete", order: newOrder });
});

// Get all orders
app.get("/api/orders", (req, res) => {
  res.json(orders);
});

// Default route
app.get("/", (req, res) => {
  res.send("E-Commerce Cart Backend is Running!");
});

// ---------------- SERVER ----------------
const PORT = 5000;
app.listen(PORT, () => console.log(`Server running at http://localhost:${PORT}`));